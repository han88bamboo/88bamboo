{%- comment -%}
  Comments may not appear right after they are submitted, either to be checked by Shopify's spam filter
  or to await moderation. When a comment is submitted, the browser is redirected to a page
  that includes the new comment id in its URL.
    Example: http://shopname.myshopify.com/blogs/news/2022072-my-post?comment=3721372
{%- endcomment -%}

<!-- Start of article-SEO-snippet - script required for SEO optimization -->
{% render 'article-SEO-snippet' %}
<!-- End of article-SEO-snippet - script required for SEO optimization -->


<!-- top ad banner -->
{% section 'article-advertising-top-banner' %}


<!-- Main content section -->
<article class="container"  > <!--style="display:inline-block;" style="margin: 0 0 !important;"-->
  <div class="grid">
    <div class="grid__item">
      <div class="grid grid--full">
        <!-- left column -->
        <div class="grid__item medium-up--seven-tenths" id="anchorforjavascripttoinsertnews-subscription">
        <!-- Title -->
        {% section 'article-title' %}
            {% comment %} 
            <!-- Featured Image -->
            
              <div class="article-featured-image-container">
                <img 
                  src="{{ article.image | img_url: 'master' }}" 
                  alt="{{ article.title | escape }}"
                  class="article-featured-image"
                  loading="lazy"
                  style="object-fit: cover; object-position: center top;" 
                   
                >
              </div>
            {% endcomment %}
             <!-- Social Sharing and bookmarking Buttons -->
              <div class="article-share-container">
                <button id="likeButton" class="like-button" data-article-id="{{ article.id }}">
                  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="like-icon"><path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path></svg>
                  <span class="like-count">0</span>
                </button>
                <button id="shareButton" class="share-button">
                  <svg xmlns="http://www.w3.org/2000/svg" class="share-icon" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="18" cy="5" r="3"></circle><circle cx="6" cy="12" r="3"></circle><circle cx="18" cy="19" r="3"></circle><line x1="8.59" y1="13.51" x2="15.42" y2="17.49"></line><line x1="15.41" y1="6.51" x2="8.59" y2="10.49"></line></svg>
                  Share
                </button>
                  <div id="shareDropdown" class="share-dropdown">
                    <a href="#" class="share-item" data-platform="facebook">
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="#3b5998"><path d="M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z"></path></svg>
                      Facebook
                    </a>
                    <a href="#" class="share-item" data-platform="whatsapp">
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="#25D366"><path d="M17.498 14.382c-.301-.15-1.767-.867-2.04-.966-.273-.101-.473-.15-.673.15-.197.295-.771.964-.944 1.162-.175.195-.349.21-.646.075-.3-.15-1.263-.465-2.403-1.485-.888-.795-1.484-1.77-1.66-2.07-.174-.3-.019-.465.13-.615.136-.135.301-.345.451-.523.146-.181.194-.301.297-.496.1-.21.049-.375-.025-.524-.075-.15-.672-1.62-.922-2.206-.24-.584-.487-.51-.672-.51-.172-.015-.371-.015-.571-.015-.2 0-.523.074-.797.359-.273.3-1.045 1.02-1.045 2.475s1.07 2.865 1.219 3.075c.149.195 2.105 3.195 5.1 4.485.714.3 1.27.48 1.704.629.714.227 1.365.195 1.88.121.574-.091 1.767-.721 2.016-1.426.255-.705.255-1.29.18-1.425-.074-.135-.27-.21-.57-.345m-5.446 7.443h-.016c-1.77 0-3.524-.48-5.055-1.38l-.36-.214-3.75.975 1.005-3.645-.239-.375c-.99-1.576-1.516-3.391-1.516-5.26 0-5.445 4.455-9.885 9.942-9.885 2.654 0 5.145 1.035 7.021 2.91 1.875 1.859 2.909 4.35 2.909 6.99-.004 5.444-4.46 9.885-9.935 9.885M20.52 3.449C18.24 1.245 15.24 0 12.045 0 5.463 0 .104 5.334.101 11.893c0 2.096.549 4.14 1.595 5.945L0 24l6.335-1.652c1.746.943 3.71 1.444 5.71 1.447h.006c6.585 0 11.946-5.336 11.949-11.896 0-3.176-1.24-6.165-3.495-8.411"></path></svg>
                      WhatsApp
                    </a>
                    <a href="#" class="share-item" data-platform="twitter">
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="#1DA1F2"><path d="M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"></path></svg>
                      Twitter/X
                    </a>
                    <a href="#" class="share-item" data-platform="email">
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="#333333"><path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path><polyline points="22,6 12,13 2,6"></polyline></svg>
                      Email
                    </a>
                    <a href="#" class="share-item" data-platform="kakaotalk">
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="#FFE812"><path d="M12 3c-5.52 0-10 3.73-10 8.33 0 2.89 1.53 5.44 3.86 7.05l-1.54 5.62 5.66-3.79c.64.17 1.32.27 2.02.27 5.52 0 10-3.73 10-8.33C22 6.73 17.52 3 12 3z"></path></svg>
                      KakaoTalk
                    </a>
                    <a href="#" class="share-item" data-platform="reddit">
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="#FF4500"><path d="M12 22c-5.52 0-10-4.48-10-10S6.48 2 12 2s10 4.48 10 10-4.48 10-10 10zm-3.97-8.05a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zm7.94 0a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zm-.38 3.78C14.35 18.85 13.23 19.4 12 19.4c-1.23 0-2.35-.55-3.59-1.67-.3-.27-.33-.73-.07-1.03.26-.31.72-.33 1.03-.08.9.81 1.69 1.18 2.63 1.18.94 0 1.73-.37 2.63-1.18.3-.25.76-.23 1.03.08.26.3.23.76-.07 1.03z"></path></svg>
                      Reddit
                    </a>
                    <a href="#" class="share-item" data-platform="vk">
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="#4C75A3"><path d="M21.547 7h-3.29a.743.743 0 0 0-.655.392s-1.312 2.416-1.734 3.23C14.734 12.813 14 12.126 14 11.11V7.603A1.104 1.104 0 0 0 12.896 6.5h-2.474a1.982 1.982 0 0 0-1.75.813s1.255-.204 1.255 1.49c0 .42.022 1.626.04 2.64a.73.73 0 0 1-1.272.503 21.54 21.54 0 0 1-2.498-4.543.693.693 0 0 0-.63-.403h-2.99a.508.508 0 0 0-.48.685C3.005 10.175 6.918 18 11.38 18h1.878a.742.742 0 0 0 .742-.742v-1.135a.73.73 0 0 1 1.23-.53l2.247 2.112a1.09 1.09 0 0 0 .746.295h2.953c1.424 0 1.424-.988.647-1.753-.546-.538-2.518-2.617-2.518-2.617a1.02 1.02 0 0 1-.078-1.323c.637-.84 1.68-2.212 2.122-2.8.603-.804 1.697-2.507.197-2.507z"></path></svg>
                      VK
                    </a>
                    <a href="#" class="share-item" data-platform="ok">
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="#EE8208"><path d="M12 2C6.486 2 2 6.486 2 12s4.486 10 10 10 10-4.486 10-10S17.514 2 12 2zm0 15c-2.41 0-4.794-.85-6.703-2.39.324-.33.75-.796 1.002-1.062 1.034-1.085 2.043-2.224 2.833-3.483.238-.373.356-.835.356-1.293 0-.764-.123-1.293-.356-1.642-.232-.35-.57-.622-1.003-.622-.433 0-.79.273-1.002.622C6.155 8.353 6 8.97 6 9.62c0 .306.045.605.127.887.207.71.78 1.288 1.596 1.288 1.756 0 3.195-1.426 3.195-3.175 0-1.748-1.438-3.174-3.196-3.174-1.756 0-3.195 1.426-3.195 3.175 0 .607.173 1.204.502 1.713l-.467.467c-.942-.942-1.466-2.208-1.466-3.54 0-2.758 2.24-4.998 4.998-4.998s5 2.24 5 4.998-2.242 5-5 5z"/></svg>
                      OK
                    </a>
                    <a href="#" class="share-item" data-platform="pinterest">
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="#E60023"><path d="M12 2C6.477 2 2 6.477 2 12c0 4.236 2.636 7.855 6.356 9.312-.088-.791-.167-2.005.035-2.868.182-.78 1.172-4.97 1.172-4.97s-.299-.6-.299-1.486c0-1.39.806-2.428 1.81-2.428.852 0 1.264.64 1.264 1.408 0 .858-.546 2.14-.828 3.33-.236.995.5 1.807 1.48 1.807 1.778 0 3.144-1.874 3.144-4.58 0-2.393-1.72-4.068-4.177-4.068-2.845 0-4.515 2.135-4.515 4.34 0 .859.331 1.781.745 2.281.083.1.094.188.071.292-.07.301-.244.955-.277 1.08-.044.183-.145.223-.335.134-1.258-.58-2.046-2.42-2.046-3.894 0-3.15 2.287-6.045 6.612-6.045 3.459 0 6.152 2.454 6.152 5.732 0 3.42-2.157 6.158-5.17 6.158-1.01 0-1.96-.525-2.29-1.146 0 0-.502 1.894-.622 2.354-.227.875-.833 1.958-1.24 2.625A10 10 0 0 0 12 22c5.523 0 10-4.477 10-10S17.523 2 12 2z"></path></svg>
                      Pinterest
                    </a>
                    <a href="#" class="share-item" data-platform="blogger">
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="#FF5722"><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-1 17.93c-3.95-.49-7-3.85-7-7.93 0-.62.08-1.21.21-1.79L9 15v1c0 1.1.9 2 2 2v1.93zm6.9-2.54c-.26-.81-1-1.39-1.9-1.39h-1v-3c0-.55-.45-1-1-1H8v-2h2c.55 0 1-.45 1-1V7h2c1.1 0 2-.9 2-2v-.41c2.93 1.19 5 4.06 5 7.41 0 2.08-.8 3.97-2.1 5.39z"></path></svg>
                      Blogger
                    </a>
                    <a href="#" class="share-item" data-platform="tumblr">
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="#36465D"><path d="M14.563 24c-5.093 0-7.031-3.756-7.031-6.411V9.747H5.116V6.648c3.63-1.313 4.512-4.596 4.71-6.469C9.84.051 9.941 0 9.999 0h3.517v6.114h4.801v3.633h-4.82v7.47c.016 1.001.375 2.371 2.207 2.371h.09c.631-.02 1.486-.205 1.936-.419l1.156 3.425c-.436.636-2.4 1.374-4.156 1.404h-.178l.011.002z"></path></svg>
                      Tumblr
                    </a>
                    <a href="#" class="share-item" data-platform="linkedin">
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="#0077B5"><path d="M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"></path><rect x="2" y="9" width="4" height="12"></rect><circle cx="4" cy="4" r="2"></circle></svg>
                      LinkedIn
                    </a>
                    <a href="#" class="share-item" data-platform="mix">
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="#FF8126"><path d="M8.95 8.6c0 .92-1.5 2.34-3.44 3.74-1.67 1.2-1.97 2.31-.38 2.88a2.69 2.69 0 0 0 3.78-1.35c.4-.99.36-1.06.7-1.06s.3.08.3 1.67c0 2.54-1.48 4-3.59 4-3.7 0-4.53-5.96-1.07-9.42 2.4-2.41 3.7-1.01 3.7-.46zm10.35 2.94c-1.98 1.55-3.99-.63-5.32 1.59-.44.74-.7.89-1.01.89-.33 0-.59-.23-.59-1.29 0-2.07-2.7-1.85-2.7.59 0 3.86 4.21 4.6 6.72 2.39 1.65-1.46 3.56-5.21 2.9-4.17z"></path></svg>
                      Mix
                    </a>
                    <a href="#" class="share-item" id="copyLink">
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="#333333"><path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path><path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path></svg>
                      Copy Link
                    </a>
                  </div>
                <button id="bookmarkButton" class="share-button bookmark-button">
                  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="bookmark-icon"><path d="M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z"></path></svg>
                  Bookmark
                </button>
              </div>

               {% comment %} <!-- Article Like Buttons -->
              <div class="article-like-container">
                <button id="likeButton" class="like-button">
                  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="like-icon"><path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path></svg>
                  <span class="like-count">0</span>
                </button>
              </div>
               {% endcomment %}
          <!-- Content for main section -->
          {% section 'article-content' %}
          <br>
          {% comment %}
          {% section 'article-advertising-bottom-banner' %}
          {% endcomment %}
        </div>
        <style>
          @media (min-width: 750px) {
              /* Styles for 750px and above */
              .grid__item.medium-up--seven-tenths {
                padding: 0 40px 0 30px;
              }
            }

            @media (max-width: 749px) {
              /* Styles for below 750px */
              .grid__item.medium-up--seven-tenths {
                padding: 0 10px 0 30px;
              }
            }
        </style>
        
        
        <!-- right column -->
        <div class="grid__item medium-up--three-tenths">
          <div class="sidebar-section">
            <!-- advertising area -->
            {% section 'article-side-advertising-area-top' %}<!-- deactivated editable side banner -->
              <!-- below is a Google display ad-->
                <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-6273752259116373"
                       crossorigin="anonymous"></script>
                  <!-- Side bar ad -->
                  <ins class="adsbygoogle"
                       style="display:block"
                       data-ad-client="ca-pub-6273752259116373"
                       data-ad-slot="8401306957"
                       data-ad-format="auto"
                       data-full-width-responsive="true"></ins>
                  <script>
                       (adsbygoogle = window.adsbygoogle || []).push({});
                  </script>
              <!-- above is a Google display ad-->
            {% section 'news-subscription' %}  <style> #shopify-section-news-subscription {margin-left:0px; margin-right:0px;} </style>
            <!-- article suggestion div for reader -->
            {% section 'article-recommend-list' %}
            
            <!-- article contributor section -->
            {% section 'article-contributor' %}

            <!-- advertising area 2 -->
            {% section 'article-side-advertising-area-bottom' %}
            
          </div>
        </div>
      </div>
    </div>
  </div>

<!-- bottom links section -->
{% section 'article-bottom-links' %}

</article>


<!-- comments section -->
{% section 'article-comments' %}

<!-- article advertisement area -->
{% section 'article-bottom-advertising-area' %}

<!-- back button -->
{% section 'article-back-category' %}



<!-- use code below to render some HTML within 10 paragraphs of an article--> 
<!--
<script type="text/javascript">
// Get all paragraphs inside the container
var paragraphs = document.querySelectorAll('#anchorforjavascripttoinsertnews-subscription p');

// Check if there are at least 26 paragraphs
if (paragraphs.length >= 26) {
  // Get the 19th paragraph
  var tenthParagraph = paragraphs[26]; // because array indexes start from 0

  // Define the HTML to insert
  var htmlToInsert = `
<br>
  <div id="shopify-section-news-subscription" class="shopify-section subbox"><div class="escapedes-main-container">
    <div class="subscribe-container">
      <p style="font-size:20px;">Subscribe to receive the latest news, releases, features & offers!</p>
      <div class="
          site-footer__newsletter custom-top-margin-small"><form method="post" action="/contact#ContactFooter" id="ContactFooter" accept-charset="UTF-8" class="contact-form" novalidate="novalidate"><input type="hidden" name="form_type" value="customer"><input type="hidden" name="utf8" value="✓">
<input type="hidden" name="contact[tags]" value="newsletter">
          <div class="input-group ">
            <input type="email" name="contact[email]" id="ContactFooter-email" class="input-group__field newsletter__input" value="" placeholder="Email address" aria-label="Email address" aria-required="true" required="" autocorrect="off" autocapitalize="off">
            <span class="input-group__btn">
              <button type="submit" class="btn newsletter__submit" name="commit" id="Subscribe">
                <span class="newsletter__submit-text--large">Subscribe</span>
              </button>
            </span>
          </div>
          
        </form>
      </div>
    </div>
  </div>




</div>
<br>  
  `;

  // Insert the HTML after the 10th paragraph
  tenthParagraph.insertAdjacentHTML('afterend', htmlToInsert);
}
</script> -->
<!-- use code above to render some HTML within 10 paragraphs of an article--> 



<style>
.article-featured-image-container {
  width: 100%;
  margin-bottom: 20px;
  overflow: hidden;
  max-width: 600px;
  margin-left: auto;
  margin-right: auto;
}

.article-featured-image {
  width: 100%;
  height: auto;
  display: block;
}

.article-share-container {
  position: relative;
  display: flex;
  justify-content: center;
  margin: 20px auto;
  z-index: 100;
  align-items: center;
  gap: 10px;
}




.share-button {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 5px;
  background-color: #f4f4f4;
  border: 1px solid #ddd;
  padding: 8px 16px;
  border-radius: 20px;
  cursor: pointer;
  font-size: 14px;
  transition: all 0.3s ease;
}

.share-button:hover {
  background-color: #e9e9e9;
}

.share-dropdown {
  position: absolute;
  top: 100%;
  left: 50%;
  transform: translateX(-50%);
  background: white;
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0,0,0,0.15);
  width: 250px;
  max-height: 0;
  overflow: hidden;
  transition: max-height 0.3s ease, padding 0.3s ease;
  z-index: 1000;
  display: grid;
  grid-template-columns: 1fr 1fr;
  opacity: 0;
  visibility: hidden;
  margin-top: 8px;
}

.share-dropdown.active {
  max-height: 350px;
  padding: 10px;
  opacity: 1;
  visibility: visible;
}

.share-item {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 8px 12px;
  color: #333;
  text-decoration: none;
  font-size: 13px;
  border-radius: 4px;
  transition: background-color 0.2s;
}

.share-item:hover {
  background-color: #f5f5f5;
}

.bookmark-button {
  transition: all 0.3s ease;
}

.bookmark-button.feedback {
  background-color: #f0f9f0;
}

.bookmark-button svg {
  transition: fill 0.3s ease;
}

/* styles for the in-article share container */
.article-share-container.in-article {
    margin: 30px 0;
    padding: 15px;
    background-color: #f9f9f9;
    border-radius: 8px;
    border-left: 3px solid #e0e0e0;
  }
.share-button {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 5px;
  background-color: #f4f4f4;
  border: 1px solid #ddd;
  padding: 8px 16px;
  border-radius: 20px;
  cursor: pointer;
  font-size: 14px;
  transition: all 0.3s ease;
}

.share-button:hover {
  background-color: #e9e9e9;
}
/* Button styling for like, share, and bookmark buttons */
.like-button, .share-button, .bookmark-button {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 5px;
  background-color: #004f2d;
  color: #f2f0e3;
  border: 1px solid transparent;
  padding: 8px 16px;
  border-radius: 20px;
  cursor: pointer;
  font-size: 14px;
  transition: all 0.3s ease;
}

/* Hover effects */
.like-button:hover, .share-button:hover, .bookmark-button:hover {
  background-color: #009c59;
  color: #f2f0e3;
  border-color: transparent;
}

/* Default icon colors */


.share-button svg {
  stroke: #ffffff;
}

.bookmark-icon {
  stroke: #ffffff;
}

/* Active states with mint background */
.like-button.liked {
  background-color: #f0f9f0;
  color: #000000;
}

.like-icon{
  stroke: #ffffff;
}

.like-button.liked .like-icon {
  fill: #ff5555;
  stroke: #ff5555;
}

.bookmark-button[data-bookmarked="true"] {
  background-color: #f0f9f0;
  color: #000000;
}

.bookmark-button[data-bookmarked="true"] .bookmark-icon {
  fill: #4CAF50;
  stroke: #4CAF50;
}

.like-count {
  font-weight: 500;
}

.bookmark-button.feedback {
  background-color: #f0f9f0;
  color: #000000;  /* Makes the "Saved" text black */
}

/* Also add this to make sure the in-article version works too */
#inArticleBookmarkButton.feedback {
  background-color: #f0f9f0;
  color: #000000;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const shareButton = document.getElementById('shareButton');
  const shareDropdown = document.getElementById('shareDropdown');
  const copyLinkButton = document.getElementById('copyLink');
  const shareItems = document.querySelectorAll('.share-item');
  
  // Toggle dropdown
  shareButton.addEventListener('click', function(event) {
    event.preventDefault();
    shareDropdown.classList.toggle('active');
  });
  
  // Close dropdown when clicking outside
  document.addEventListener('click', function(event) {
    if (!event.target.closest('.article-share-container')) {
      shareDropdown.classList.remove('active');
    }
  });
  
  // Handle share links
  shareItems.forEach(function(item) {
    if (item.id === 'copyLink') return;
    
    item.addEventListener('click', function(event) {
      event.preventDefault();
      
      const platform = this.getAttribute('data-platform');
      const title = document.title;
      const url = window.location.href;
      let shareUrl = '';
      
      switch(platform) {
        case 'facebook':
          shareUrl = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(url)}`;
          break;
        case 'twitter':
          shareUrl = `https://twitter.com/intent/tweet?text=${encodeURIComponent(title)}&url=${encodeURIComponent(url)}`;
          break;
        case 'whatsapp':
          shareUrl = `https://api.whatsapp.com/send?text=${encodeURIComponent(title + ' ' + url)}`;
          break;
        case 'email':
          shareUrl = `mailto:?subject=${encodeURIComponent(title)}&body=${encodeURIComponent(url)}`;
          break;
        case 'kakaotalk':
          shareUrl = `https://story.kakao.com/share?url=${encodeURIComponent(url)}`;
          break;
        case 'reddit':
          shareUrl = `https://reddit.com/submit?url=${encodeURIComponent(url)}&title=${encodeURIComponent(title)}`;
          break;
        case 'vk':
          shareUrl = `https://vk.com/share.php?url=${encodeURIComponent(url)}&title=${encodeURIComponent(title)}`;
          break;
        case 'ok':
          shareUrl = `https://connect.ok.ru/offer?url=${encodeURIComponent(url)}&title=${encodeURIComponent(title)}`;
          break;
        case 'pinterest':
          let media = '';
          const images = document.querySelectorAll('.article-featured-image');
          if (images.length > 0) {
            media = images[0].src;
          }
          shareUrl = `https://pinterest.com/pin/create/button/?url=${encodeURIComponent(url)}&media=${encodeURIComponent(media)}&description=${encodeURIComponent(title)}`;
          break;
        case 'blogger':
          shareUrl = `https://www.blogger.com/blog-this.g?u=${encodeURIComponent(url)}&n=${encodeURIComponent(title)}`;
          break;
        case 'tumblr':
          shareUrl = `https://www.tumblr.com/share/link?url=${encodeURIComponent(url)}&name=${encodeURIComponent(title)}`;
          break;
        case 'linkedin':
          shareUrl = `https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(url)}`;
          break;
        case 'mix':
          shareUrl = `https://mix.com/add?url=${encodeURIComponent(url)}`;
          break;
      }
      
      if (shareUrl) {
        window.open(shareUrl, '_blank', 'width=600,height=500');
        shareDropdown.classList.remove('active');
      }
    });
  });
  
  // Copy link functionality
  copyLinkButton.addEventListener('click', function(event) {
    event.preventDefault();
    
    const url = window.location.href;
    
    // Create temporary input to copy URL
    const tempInput = document.createElement('input');
    tempInput.value = url;
    document.body.appendChild(tempInput);
    tempInput.select();
    document.execCommand('copy');
    document.body.removeChild(tempInput);
    
    // Visual feedback
    const originalText = this.innerHTML;
    this.innerHTML = `
      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="#4CAF50"><path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z"></path></svg>
      Copied!
    `;
    
    setTimeout(() => {
      this.innerHTML = originalText;
      shareDropdown.classList.remove('active');
    }, 2000);
  });
});
//for bookmark button to Use localStorage to save/remove bookmarks, Gives visual feedback when clicked (fills the icon green when bookmarked)
document.addEventListener('DOMContentLoaded', function() {
  const bookmarkButton = document.getElementById('bookmarkButton');
  
  // Check if article is already bookmarked
  function isBookmarked() {
    const bookmarks = JSON.parse(localStorage.getItem('article_bookmarks') || '[]');
    const currentUrl = window.location.href;
    return bookmarks.includes(currentUrl);
  }
  
  // Update button appearance based on bookmark status
function updateBookmarkButton() {
  if (isBookmarked()) {
    bookmarkButton.innerHTML = `
      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="#4CAF50" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="bookmark-icon"><path d="M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z"></path></svg>
      Bookmarked
    `;
    bookmarkButton.setAttribute('title', 'Remove bookmark');
    bookmarkButton.setAttribute('data-bookmarked', 'true');
  } else {
    bookmarkButton.innerHTML = `
      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="bookmark-icon"><path d="M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z"></path></svg>
      Bookmark
    `;
    bookmarkButton.setAttribute('title', 'Bookmark this article');
    bookmarkButton.setAttribute('data-bookmarked', 'false');
  }
}
  
  // Toggle bookmark status
  bookmarkButton.addEventListener('click', function() {
    const currentUrl = window.location.href;
    let bookmarks = JSON.parse(localStorage.getItem('article_bookmarks') || '[]');
    
    if (isBookmarked()) {
      // Remove bookmark
      bookmarks = bookmarks.filter(url => url !== currentUrl);
      localStorage.setItem('article_bookmarks', JSON.stringify(bookmarks));
      
      // Provide feedback
      bookmarkButton.classList.add('feedback');
      bookmarkButton.innerHTML = `
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="bookmark-icon"><path d="M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z"></path></svg>
        Removed
      `;
    } else {
      // Add bookmark
      bookmarks.push(currentUrl);
      localStorage.setItem('article_bookmarks', JSON.stringify(bookmarks));
      
      // Provide feedback
      bookmarkButton.classList.add('feedback');
      bookmarkButton.innerHTML = `
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="#4CAF50" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="bookmark-icon"><path d="M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z"></path></svg>
        Saved
      `;
    }
    
    // Reset button after 2 seconds but maintain correct state
    setTimeout(() => {
      bookmarkButton.classList.remove('feedback');
      updateBookmarkButton(); // This will set the correct text and icon
    }, 2000);
  });
  
  // Initialize button state
  updateBookmarkButton();
});

document.addEventListener('DOMContentLoaded', function() {
  // Find the article content container - adjust the selector as needed
  const articleContent = document.querySelector('#shopify-section-article-content');
  
  if (!articleContent) return;
  
  // Find all paragraphs, filtering out any that contain images
  const paragraphs = Array.from(articleContent.querySelectorAll('p')).filter(p => {
    return p.querySelectorAll('img').length === 0;
  });
  
  // Check if we have at least 3 paragraphs
  if (paragraphs.length >= 5) {
    // Get the third paragraph
    const thirdParagraph = paragraphs[4];
    
    // Create a container for our buttons
    const buttonContainer = document.createElement('div');
    buttonContainer.className = 'article-share-container in-article';
    
    // Clone the share and bookmark buttons
    const originalShareContainer = document.querySelector('.article-share-container');
    if (originalShareContainer) {
      // Create a deep clone of the original buttons
      const clonedContainer = originalShareContainer.cloneNode(true);
      
      // Extract the buttons we need
      const shareButton = clonedContainer.querySelector('#shareButton');
      const bookmarkButton = clonedContainer.querySelector('#bookmarkButton');
      const likeButton = clonedContainer.querySelector('#likeButton');

      // Give them unique IDs to avoid conflicts
      if (likeButton) {
        likeButton.id = 'inArticleLikeButton';
        // Make sure we keep the data attribute for the article ID
        likeButton.setAttribute('data-article-id', document.getElementById('likeButton').getAttribute('data-article-id'));
        buttonContainer.appendChild(likeButton);
      }
      if (shareButton) {
        shareButton.id = 'inArticleShareButton';
        buttonContainer.appendChild(shareButton);
      }
      
      if (bookmarkButton) {
        bookmarkButton.id = 'inArticleBookmarkButton';
        buttonContainer.appendChild(bookmarkButton);
      }

      
      // Insert our new container after the third paragraph
      thirdParagraph.insertAdjacentElement('afterend', buttonContainer);
      
      // Apply some spacing
      const spacer = document.createElement('div');
      spacer.style.height = '20px';
      buttonContainer.insertAdjacentElement('afterend', spacer);
      
      // Initialize the cloned bookmark button
      initInArticleBookmarkButton();
      // Initialize the cloned like button
      initInArticleLikeButton();
    }
  }
  
  // Initialize the in-article bookmark button
  function initInArticleBookmarkButton() {
    const inArticleBookmarkButton = document.getElementById('inArticleBookmarkButton');
    if (!inArticleBookmarkButton) return;
    
    function isBookmarked() {
      const bookmarks = JSON.parse(localStorage.getItem('article_bookmarks') || '[]');
      const currentUrl = window.location.href;
      return bookmarks.includes(currentUrl);
    }
    
    function updateBookmarkButton() {
      if (isBookmarked()) {
        inArticleBookmarkButton.innerHTML = `
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="#4CAF50" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="bookmark-icon"><path d="M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z"></path></svg>
          Bookmarked
        `;
        inArticleBookmarkButton.setAttribute('title', 'Remove bookmark');
        inArticleBookmarkButton.setAttribute('data-bookmarked', 'true');
      } else {
        inArticleBookmarkButton.innerHTML = `
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="bookmark-icon"><path d="M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z"></path></svg>
          Bookmark
        `;
        inArticleBookmarkButton.setAttribute('title', 'Bookmark this article');
        inArticleBookmarkButton.setAttribute('data-bookmarked', 'false');
      }
    }
    
    inArticleBookmarkButton.addEventListener('click', function() {
      const currentUrl = window.location.href;
      let bookmarks = JSON.parse(localStorage.getItem('article_bookmarks') || '[]');
      
      if (isBookmarked()) {
        // Remove bookmark
        bookmarks = bookmarks.filter(url => url !== currentUrl);
        localStorage.setItem('article_bookmarks', JSON.stringify(bookmarks));
        
        // Provide feedback
        inArticleBookmarkButton.classList.add('feedback');
        inArticleBookmarkButton.innerHTML = `
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="bookmark-icon"><path d="M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z"></path></svg>
          Removed
        `;
        
        // Update the main bookmark button too
        const mainBookmarkButton = document.getElementById('bookmarkButton');
        if (mainBookmarkButton) {
          mainBookmarkButton.setAttribute('data-bookmarked', 'false');
          const mainUpdateFunc = eval('(' + mainBookmarkButton.getAttribute('onclick') + ')');
          if (typeof mainUpdateFunc === 'function') mainUpdateFunc();
        }
      } else {
        // Add bookmark
        bookmarks.push(currentUrl);
        localStorage.setItem('article_bookmarks', JSON.stringify(bookmarks));
        
        // Provide feedback
        inArticleBookmarkButton.classList.add('feedback');
        inArticleBookmarkButton.innerHTML = `
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="#4CAF50" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="bookmark-icon"><path d="M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z"></path></svg>
          Saved
        `;
        
        // Update the main bookmark button too
        const mainBookmarkButton = document.getElementById('bookmarkButton');
        if (mainBookmarkButton) {
          mainBookmarkButton.setAttribute('data-bookmarked', 'true');
          const mainUpdateFunc = eval('(' + mainBookmarkButton.getAttribute('onclick') + ')');
          if (typeof mainUpdateFunc === 'function') mainUpdateFunc();
        }
      }
      
      // Reset button after 2 seconds but maintain correct state
      setTimeout(() => {
        inArticleBookmarkButton.classList.remove('feedback');
        updateBookmarkButton();
        
        // Also update the original bookmark button
        const originalUpdateButton = document.querySelector('#bookmarkButton');
        if (originalUpdateButton) {
          const updateFunc = window.updateBookmarkButton;
          if (typeof updateFunc === 'function') updateFunc();
        }
      }, 2000);
    });
    
    // Initialize button state
    updateBookmarkButton();
  }

  // Initialize the in-article like button
function initInArticleLikeButton() {
  const inArticleLikeButton = document.getElementById('inArticleLikeButton');
  if (!inArticleLikeButton) return;
  
  const inArticleLikeCount = inArticleLikeButton.querySelector('.like-count');
  const articleId = inArticleLikeButton.getAttribute('data-article-id');
  const likeServerUrl = 'https://likes.88bamboo.co';
  
  function hasLiked() {
    const likes = JSON.parse(localStorage.getItem('article_likes') || '[]');
    return likes.includes(articleId);
  }
  
  function updateLikeButtonState() {
    if (hasLiked()) {
      inArticleLikeButton.classList.add('liked');
      inArticleLikeButton.innerHTML = `
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="#ff5555" stroke="#ff5555" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="like-icon"><path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path></svg>
        <span class="like-count">${inArticleLikeCount.textContent}</span>
      `;
    } else {
      inArticleLikeButton.classList.remove('liked');
      inArticleLikeButton.innerHTML = `
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="like-icon"><path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path></svg>
        <span class="like-count">${inArticleLikeCount.textContent}</span>
      `;
    }
  }
  
  inArticleLikeButton.addEventListener('click', function() {
    if (hasLiked()) return; // Already liked
    
    fetch(`${likeServerUrl}/likes/add/${articleId}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      }
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        // Update local storage
        let likes = JSON.parse(localStorage.getItem('article_likes') || '[]');
        if (!likes.includes(articleId)) {
          likes.push(articleId);
          localStorage.setItem('article_likes', JSON.stringify(likes));
        }
        
        // Update both like buttons
        inArticleLikeCount.textContent = data.newCount;
        updateLikeButtonState();
        
        // Update the main like button too
        const mainLikeButton = document.getElementById('likeButton');
        if (mainLikeButton) {
          const mainLikeCount = mainLikeButton.querySelector('.like-count');
          if (mainLikeCount) mainLikeCount.textContent = data.newCount;
          if (typeof updateLikeButtonState === 'function') {
            const mainLikeButton = document.getElementById('likeButton');
            const mainLikeCount = mainLikeButton.querySelector('.like-count');
            if (mainLikeCount) mainLikeCount.textContent = data.newCount;
            if (mainLikeButton) {
              if (hasLiked()) {
                mainLikeButton.classList.add('liked');
                mainLikeButton.innerHTML = `
                  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="#ff5555" stroke="#ff5555" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="like-icon"><path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path></svg>
                  <span class="like-count">${data.newCount}</span>
                `;
              }
            }
          }
        }
      }
    })
    .catch(error => {
      console.error('Error submitting like:', error);
    });
  });
  
  // IMPORTANT: Add this code to synchronize counts with a 1-second delay
  setTimeout(() => {
    // Get count from main button which already works
    const mainLikeButton = document.getElementById('likeButton');
    if (mainLikeButton) {
      const mainCount = mainLikeButton.querySelector('.like-count');
      if (mainCount && inArticleLikeCount) {
        // Copy the count value from main button to in-article button
        inArticleLikeCount.textContent = mainCount.textContent;
        console.log("Synced count after delay:", mainCount.textContent);
      }
    }
    
    // Initialize button state after getting the count
    updateLikeButtonState();
  }, 1500); // 1.5 second delay
}

// Like button functionality

  const likeButton = document.getElementById('likeButton');
  if (!likeButton) return;
  // INSERT THE DIAGNOSTIC CODE RIGHT HERE, AFTER THE ABOVE LINES
  console.log("Article button exists:", !!likeButton);
  console.log("Button HTML:", likeButton.outerHTML);
  console.log("Has article-id attribute:", likeButton.hasAttribute('data-article-id'));
  console.log("Article ID value:", likeButton.getAttribute('data-article-id'));
  console.log("Article URL path:", window.location.pathname);
  console.log("Article collection:", window.location.pathname.split('/')[2]);

  const likeCount = likeButton.querySelector('.like-count');
  const articleId = likeButton.getAttribute('data-article-id'); // Get article ID from data attribute
  console.log("Article ID:", articleId); // Add debug log to verify
  const likeServerUrl = 'https://likes.88bamboo.co'; // Update with your server URL - TZH to take note
  
  // Check if user has liked this article before
  function hasLiked() {
    const likes = JSON.parse(localStorage.getItem('article_likes') || '[]');
    return likes.includes(articleId);
  }
  
  // Mark as liked in local storage
  function markAsLiked() {
    let likes = JSON.parse(localStorage.getItem('article_likes') || '[]');
    if (!likes.includes(articleId)) {
      likes.push(articleId);
      localStorage.setItem('article_likes', JSON.stringify(likes));
    }
  }
  
  // Update button appearance
  function updateLikeButtonState() {
    if (hasLiked()) {
      likeButton.classList.add('liked');
      likeButton.innerHTML = `
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="#ff5555" stroke="#ff5555" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="like-icon"><path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path></svg>
        <span class="like-count">${likeCount.textContent}</span>
      `;
    } else {
      likeButton.classList.remove('liked');
      likeButton.innerHTML = `
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="like-icon"><path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path></svg>
        <span class="like-count">${likeCount.textContent}</span>
      `;
    }
  }
  
  // Fetch current like count from server
  function fetchLikeCount() {
  console.log("Fetching from URL:", `${likeServerUrl}/likes/count/${articleId}`);
  fetch(`${likeServerUrl}/likes/count/${articleId}`)
    .then(response => {
      console.log("Server response status:", response.status);
      return response.json();
    })
    .then(data => {
      console.log("Received data:", data);
      likeCount.textContent = data.count;
      updateLikeButtonState();
    })
    .catch(error => {
      console.error('Error fetching like count:', error);
    });
}
  
  // Submit a like
  function submitLike() {
    if (hasLiked()) {
      return; // Already liked
    }
    
    fetch(`${likeServerUrl}/likes/add/${articleId}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      }
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        markAsLiked();
        likeCount.textContent = data.newCount;
        updateLikeButtonState();
      }
    })
    .catch(error => {
      console.error('Error submitting like:', error);
    });
  }
  
  // Initialize
  updateLikeButtonState();
  console.log("About to fetch like count for article ID:", articleId);
  console.log("Using server URL:", likeServerUrl);
  fetchLikeCount();
  
  // Handle click events
  likeButton.addEventListener('click', function() {
    if (!hasLiked()) {
      submitLike();
    }
  });

});
</script>